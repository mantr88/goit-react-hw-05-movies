{"version":3,"file":"static/js/237.c53a9f44.chunk.js","mappings":"uRAoBA,EAlBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OAAsB,IAAlBF,EAAOG,QACF,qEAIP,wBACGH,EAAOI,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAAxC,UACE,wBAAoBI,EAAMK,OAAjBL,EAAME,KAFF,KAOtB,EC2CD,EAtDe,WAEb,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAEC,MAAO,KAAjE,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAoBF,EAAaG,IAAI,SA+B3C,OA7BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUC,YAAW,WACzB,IAAMC,EAAY,mCAAG,kGAES,KAAtBL,EAFa,uBAGfP,EAAU,IAHK,iCAMjBE,GAAa,GANI,UAOSW,EAAAA,EAAAA,IAAsBN,GAP/B,gBAOTO,EAPS,EAOTA,QAERd,EAAUc,GATO,wDAWX,IAAIC,MAAJ,yEAXW,yBAajBb,GAAa,GAbI,6EAAH,qDAgBlBU,GACD,GAAE,KAEH,OAAO,kBAAMI,aAAaN,EAAnB,CACR,GAAE,CAACH,KAQF,6BACE,SAAC,MAAD,KACA,kBACEU,KAAK,OACLC,KAAK,QACLC,SAAU,SAAAC,GAAG,OAAId,EAAgB,CAAEF,MAAOgB,EAAIC,OAAOC,OAAxC,EACbA,MAAOf,KAKT,yBAAMN,IAAa,SAACsB,EAAA,EAAD,CAAcC,MAAM,eACvC,SAAC,EAAD,CAAYpC,OAAQA,MAGzB,C,+ICzDKqC,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAkB,mCAAG,uGACTD,EAAAA,EAAAA,GAAM,8BAAD,OAA+BD,IAD3B,uBACxBG,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,qDAKlBf,EAAqB,mCAAG,WAAMT,GAAN,0FACZsB,EAAAA,EAAAA,GAAM,wBAAD,OAAyBD,EAAzB,kBAAsCrB,IAD/B,uBAC3BwB,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,sDAKrBC,EAAc,mCAAG,WAAMlC,GAAN,0FACL+B,EAAAA,EAAAA,GAAM,SAAD,OAAU/B,EAAV,oBAAwB8B,IADxB,uBACpBG,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qD","sources":["components/MoviesList.jsx","Pages/Movies.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  if (movies.length === 0) {\n    return <div>Enter search query, pleaseðŸ‘†</div>;\n  }\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <Link to={`${movie.id}`} state={{ from: location }}>\n          <li key={movie.id}>{movie.title}</li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\nimport { FcSearch } from 'react-icons/fc';\nimport { fetchMoviesByQueryStr } from 'services/api';\nimport { CircleLoader } from 'react-spinners';\nimport MoviesList from 'components/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  // const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams({ query: '' });\n  const searchMovieString = searchParams.get('query');\n\n  useEffect(() => {\n    const getData = setTimeout(() => {\n      const searchMovies = async () => {\n        try {\n          if (searchMovieString === '') {\n            setMovies([]);\n            return;\n          }\n          setIsLoading(true);\n          const { results } = await fetchMoviesByQueryStr(searchMovieString);\n          // console.log(results);\n          setMovies(results);\n        } catch (error) {\n          throw new Error(`ðŸ˜¢Sorry, it is error. Your error ðŸ‘‰ ${error}`);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      searchMovies();\n    }, 500);\n\n    return () => clearTimeout(getData);\n  }, [searchMovieString]);\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   setQuery(e.currentTarget.elements.query.value);\n  // };\n\n  return (\n    <main>\n      <FcSearch />\n      <input\n        type=\"text\"\n        name=\"query\"\n        onChange={evt => setSearchParams({ query: evt.target.value })}\n        value={searchMovieString}\n      ></input>\n      {/* <button type=\"submit\">\n          <FcSearch />\n        </button> */}\n      <div>{isLoading && <CircleLoader color=\"#d66b36\" />}</div>\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '01917690f0f54d5c14258bd49d6faae2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchPopularMovies = async () => {\n  const { data } = await axios(`trending/movie/day?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchMoviesByQueryStr = async query => {\n  const { data } = await axios(`search/movie?api_key=${KEY}&query=${query}`);\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios(`movie/${id}?api_key=${KEY}`);\n  return data;\n};\n"],"names":["movies","location","useLocation","length","map","movie","to","id","state","from","title","useState","setMovies","isLoading","setIsLoading","useSearchParams","query","searchParams","setSearchParams","searchMovieString","get","useEffect","getData","setTimeout","searchMovies","fetchMoviesByQueryStr","results","Error","clearTimeout","type","name","onChange","evt","target","value","CircleLoader","color","KEY","axios","fetchPopularMovies","data","fetchMovieById"],"sourceRoot":""}