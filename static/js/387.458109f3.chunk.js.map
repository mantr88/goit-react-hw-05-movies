{"version":3,"file":"static/js/387.458109f3.chunk.js","mappings":"qRAEaA,EAAWC,EAAAA,GAAAA,IAAH,4JAQRC,EAAWD,EAAAA,GAAAA,GAAH,iH,SC2CrB,EA/Ca,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,sGAEbF,GAAa,GAFA,UAGUG,EAAAA,EAAAA,IAAmBT,GAH7B,gBAGLG,EAHK,EAGLA,KAERC,EAAQD,GALK,sDAOP,IAAIO,MAAJ,yEAPO,yBASbJ,GAAa,GATA,4EAAH,qDAYdE,GACD,GAAE,CAACR,KAGF,4BACE,yBAAMK,IAAa,SAACM,EAAA,EAAD,CAAcC,MAAM,eACvC,SAACf,EAAD,UACGM,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,OACR,UAAClB,EAAD,YACE,gBACEmB,IACEJ,EAAY,yCAC0BA,GAClC,mLAENK,IAAKH,EACLI,MAAM,SAER,4BACE,wBAAKJ,KACL,uCAAeC,UAZJF,EADP,QAoBjB,C,+LCjDKM,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAkB,mCAAG,uGACTD,EAAAA,EAAAA,GAAM,8BAAD,OAA+BD,IAD3B,uBACxBG,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,qDAKlBC,EAAqB,mCAAG,WAAMC,GAAN,0FACZJ,EAAAA,EAAAA,GAAM,wBAAD,OAAyBD,EAAzB,kBAAsCK,IAD/B,uBAC3BF,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,sDAKrBG,EAAc,mCAAG,WAAMC,GAAN,0FACLN,EAAAA,EAAAA,GAAM,SAAD,OAAUM,EAAV,oBAAwBP,IADxB,uBACpBG,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdf,EAAkB,mCAAG,WAAMmB,GAAN,0FACTN,EAAAA,EAAAA,GAAM,SAAD,OAAUM,EAAV,4BAAgCP,IAD5B,uBACxBG,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKlBK,EAAmB,mCAAG,WAAMD,GAAN,0FACVN,EAAAA,EAAAA,GAAM,WAAD,OACtBM,EADsB,4BACAP,IAFK,uBACzBG,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastWrap = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  text-align: center;\n  text-decoration: none;\n`;\n\nexport const CastItem = styled.li`\n  padding: 5px;\n  border: 1px solid black;\n  border-radius: 4px;\n  list-style: none;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCreditOfMovie } from 'services/api';\nimport { CircleLoader } from 'react-spinners';\nimport { CastItem, CastWrap } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchCreditOfMovie(movieId);\n        // console.log(cast);\n        setCast(cast);\n      } catch (error) {\n        throw new Error(`ðŸ˜¢Sorry, it is error. Your error ðŸ‘‰ ${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <div>{isLoading && <CircleLoader color=\"#d66b36\" />}</div>\n      <CastWrap>\n        {cast.map(({ profile_path, cast_id, name, character }) => (\n          <CastItem key={cast_id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                  : 'https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg'\n              }\n              alt={name}\n              width=\"240\"\n            />\n            <div>\n              <h4>{name}</h4>\n              <p>Character: {character}</p>\n            </div>\n          </CastItem>\n        ))}\n      </CastWrap>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '01917690f0f54d5c14258bd49d6faae2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchPopularMovies = async () => {\n  const { data } = await axios(`trending/movie/day?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchMoviesByQueryStr = async query => {\n  const { data } = await axios(`search/movie?api_key=${KEY}&query=${query}`);\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios(`movie/${id}?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchCreditOfMovie = async id => {\n  const { data } = await axios(`movie/${id}/credits?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchReviewsOfMovie = async id => {\n  const { data } = await axios(`\nmovie/${id}/reviews?api_key=${KEY}`);\n  return data;\n};\n"],"names":["CastWrap","styled","CastItem","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","getMovie","fetchCreditOfMovie","Error","CircleLoader","color","map","profile_path","cast_id","name","character","src","alt","width","KEY","axios","fetchPopularMovies","data","fetchMoviesByQueryStr","query","fetchMovieById","id","fetchReviewsOfMovie"],"sourceRoot":""}