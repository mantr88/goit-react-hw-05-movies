{"version":3,"file":"static/js/407.ee773fbc.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","Pages/Movies.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  border: 2px solid #ff6347;\n  border-radius: 4px;\n  padding: 8px;\n  margin-right: 15px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  background-color: #ffa07a;\n  border: 1px solid #ffa07a;\n  border-radius: 4px;\n  padding: 8px 18px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #ff4500;\n    color: #ffffff;\n  }\n`;\n\nexport const Span = styled.span`\n  margin-left: 10px;\n`;\n","import { FcSearch } from 'react-icons/fc';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input, Span } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input type=\"text\" name=\"query\"></Input>\n      <Button type=\"submit\">\n        <FcSearch />\n        <Span>Search</Span>\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchMoviesByQueryStr } from 'services/api';\nimport { CircleLoader } from 'react-spinners';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams({ query: '' });\n  const searchMovieString = searchParams.get('query');\n\n  useEffect(() => {\n    const getData = setTimeout(() => {\n      const searchMovies = async () => {\n        try {\n          if (searchMovieString === '') {\n            setMovies([]);\n            return;\n          }\n          setIsLoading(true);\n          const { results } = await fetchMoviesByQueryStr(searchMovieString);\n          setMovies(results);\n        } catch (error) {\n          throw new Error(`ðŸ˜¢Sorry, it is error. Your error ðŸ‘‰ ${error}`);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      searchMovies();\n    }, 500);\n\n    return () => clearTimeout(getData);\n  }, [searchMovieString]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const searchQueryStr = evt.target.elements.query.value;\n    const searchQueryStrTrim = searchQueryStr.trim();\n\n    setSearchParams({ query: searchQueryStrTrim });\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={handleSubmit} />\n      <div>{isLoading && <CircleLoader color=\"#d66b36\" />}</div>\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListContainer = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  text-align: center;\n  text-decoration: none;\n`;\n\nexport const CardWrapper = styled.li`\n  padding: 5px;\n  border: 1px solid black;\n  border-radius: 4px;\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  text-decoration: none;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  CardWrapper,\n  ListContainer,\n  MovieName,\n  StyledLink,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ListContainer>\n      {movies.map(({ id, poster_path, title }) => (\n        <CardWrapper key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                  : 'https://www.movienewz.com/img/films/poster-holder.jpg'\n              }\n              alt={title}\n            />\n            <MovieName>{title}</MovieName>\n          </StyledLink>\n        </CardWrapper>\n      ))}\n    </ListContainer>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import axios from 'axios';\n\nconst KEY = '01917690f0f54d5c14258bd49d6faae2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchPopularMovies = async () => {\n  const { data } = await axios(`trending/movie/day?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchMoviesByQueryStr = async query => {\n  const { data } = await axios(`search/movie?api_key=${KEY}&query=${query}`);\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios(`movie/${id}?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchCreditOfMovie = async id => {\n  const { data } = await axios(`movie/${id}/credits?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchReviewsOfMovie = async id => {\n  const { data } = await axios(`\nmovie/${id}/reviews?api_key=${KEY}`);\n  return data;\n};\n"],"names":["Form","styled","Input","Button","Span","onSubmit","type","name","useState","movies","setMovies","isLoading","setIsLoading","useSearchParams","query","searchParams","setSearchParams","searchMovieString","get","useEffect","getData","setTimeout","searchMovies","fetchMoviesByQueryStr","results","Error","clearTimeout","evt","preventDefault","searchQueryStrTrim","target","elements","value","trim","CircleLoader","color","MoviesList","ListContainer","CardWrapper","MovieName","StyledLink","NavLink","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","KEY","axios","fetchPopularMovies","data","fetchMovieById","fetchCreditOfMovie","fetchReviewsOfMovie"],"sourceRoot":""}