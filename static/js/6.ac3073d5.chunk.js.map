{"version":3,"file":"static/js/6.ac3073d5.chunk.js","mappings":"8NAiCA,UA5Ba,WACX,OAA0CA,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMJ,EAAa,mCAAG,sGAElBG,GAAa,GAFK,UAGQE,EAAAA,EAAAA,MAHR,gBAGVC,EAHU,EAGVA,QAERL,EAAiBK,GALC,sDAOZ,IAAIC,MAAJ,yEAPY,yBASlBJ,GAAa,GATK,4EAAH,qDAYnBH,GACD,GAAE,KAGD,6BACE,2CACCE,IAAa,SAAC,IAAD,CAAcM,MAAM,aAClC,SAAC,IAAD,CAAmBC,OAAQT,MAGhC,C,qGC5BYU,EAAgBC,EAAAA,GAAAA,GAAH,4JAQbC,EAAcD,EAAAA,GAAAA,GAAH,4FAMXE,EAAYF,EAAAA,GAAAA,GAAH,6HAQTG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,kD,SCOvB,EAvBmB,SAAC,GAAgB,IAAdF,EAAa,EAAbA,OACdO,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,UACGD,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,SAACT,EAAD,WACE,UAACE,EAAD,CAAYQ,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAhD,WACE,gBACES,IACEL,EAAW,yCAC2BA,GAClC,wDAENM,IAAKL,KAEP,SAACR,EAAD,UAAYQ,QAVEF,EADR,KAiBjB,C,+LC5BKQ,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMvB,EAAkB,mCAAG,uGACTuB,EAAAA,EAAAA,GAAM,8BAAD,OAA+BD,IAD3B,uBACxBE,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,qDAKlBC,EAAqB,mCAAG,WAAMC,GAAN,0FACZH,EAAAA,EAAAA,GAAM,wBAAD,OAAyBD,EAAzB,kBAAsCI,IAD/B,uBAC3BF,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,sDAKrBG,EAAc,mCAAG,WAAMb,GAAN,0FACLS,EAAAA,EAAAA,GAAM,SAAD,OAAUT,EAAV,oBAAwBQ,IADxB,uBACpBE,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAkB,mCAAG,WAAMd,GAAN,0FACTS,EAAAA,EAAAA,GAAM,SAAD,OAAUT,EAAV,4BAAgCQ,IAD5B,uBACxBE,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKlBK,EAAmB,mCAAG,WAAMf,GAAN,0FACVS,EAAAA,EAAAA,GAAM,WAAD,OACtBT,EADsB,4BACAQ,IAFK,uBACzBE,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qD","sources":["Pages/Home.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchPopularMovies } from 'services/api';\nimport { CircleLoader } from 'react-spinners';\nimport PopularMoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const popularMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchPopularMovies();\n        // console.log(results);\n        setPopularMovies(results);\n      } catch (error) {\n        throw new Error(`ðŸ˜¢Sorry, it is error. Your error ðŸ‘‰ ${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    popularMovies();\n  }, []);\n\n  return (\n    <main>\n      <h1>Popular movies</h1>\n      {isLoading && <CircleLoader color=\"#d66b36\" />}\n      <PopularMoviesList movies={popularMovies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListContainer = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  text-align: center;\n  text-decoration: none;\n`;\n\nexport const CardWrapper = styled.li`\n  padding: 5px;\n  border: 1px solid black;\n  border-radius: 4px;\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  text-decoration: none;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  CardWrapper,\n  ListContainer,\n  MovieName,\n  StyledLink,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ListContainer>\n      {movies.map(({ id, poster_path, title }) => (\n        <CardWrapper key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                  : 'https://www.movienewz.com/img/films/poster-holder.jpg'\n              }\n              alt={title}\n            />\n            <MovieName>{title}</MovieName>\n          </StyledLink>\n        </CardWrapper>\n      ))}\n    </ListContainer>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import axios from 'axios';\n\nconst KEY = '01917690f0f54d5c14258bd49d6faae2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchPopularMovies = async () => {\n  const { data } = await axios(`trending/movie/day?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchMoviesByQueryStr = async query => {\n  const { data } = await axios(`search/movie?api_key=${KEY}&query=${query}`);\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios(`movie/${id}?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchCreditOfMovie = async id => {\n  const { data } = await axios(`movie/${id}/credits?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchReviewsOfMovie = async id => {\n  const { data } = await axios(`\nmovie/${id}/reviews?api_key=${KEY}`);\n  return data;\n};\n"],"names":["useState","popularMovies","setPopularMovies","isLoading","setIsLoading","useEffect","fetchPopularMovies","results","Error","color","movies","ListContainer","styled","CardWrapper","MovieName","StyledLink","NavLink","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","KEY","axios","data","fetchMoviesByQueryStr","query","fetchMovieById","fetchCreditOfMovie","fetchReviewsOfMovie"],"sourceRoot":""}